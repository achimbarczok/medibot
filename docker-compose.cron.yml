# docker-compose.cron.yml - Für geplante Ausführung
version: '3.8'

services:
  medibot-scheduler:
    build: .
    container_name: medibot-scheduler
    restart: unless-stopped
    
    volumes:
      - ./config.py:/app/config.py:ro
      - ./logs:/app/logs
      - /etc/localtime:/etc/localtime:ro
    
    environment:
      - TZ=Europe/Berlin
    
    # Überschreibe das CMD für Cron-basierte Ausführung
    command: >
      sh -c "
        # Install cron
        apt-get update && apt-get install -y cron && 
        
        # Create crontab (alle 10 Minuten)
        echo '*/10 * * * * cd /app && python3 medibot.py >> /app/logs/cron.log 2>&1' > /tmp/crontab &&
        crontab /tmp/crontab &&
        
        # Start cron in foreground
        cron -f
      "
    
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.25'
    
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Optional: Monitoring Container
  medibot-monitor:
    image: prom/prometheus:latest
    container_name: medibot-monitor
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    profiles:
      - monitoring

volumes:
  prometheus_data:
